/* this overrides styles for the schedule once widget */

#SOBookingButton, #SOEmailButton {
  .button-variant(white; @cc-att-pos-mid; @cc-att-pos-mid);

  background-color: @cc-att-pos-mid !important;
  color: white !important;
  cursor: pointer;
  font-size: inherit !important;
  font-weight: 400 !important;
  -webkit-box-shadow: 0 0 0 transparent !important;
  box-shadow: 0 0 0 transparent !important;
  font-family: inherit !important;
}

#SOEmailButton {
  height: @input-height-base + 4px !important;
  line-height: @input-height-base + 4px !important;
}

#SOWidgetTitle {
    background-color: @cc-brand-low !important;
    font-family: inherit !important;
    span {
      font-weight: 600 !important;
    }
}

#SOWidget {
  border-width: 5px !important;
}

#SONote, #SOSenderEmail {

  min-height: 36px;

  display: inline-block;
  width: 100%;
  height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size-base !important;
  line-height: @line-height-base !important;
  color: @input-color !important;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border !important;
  border-radius: @input-border-radius !important; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  .box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  .transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");

  // Customize the `:focus` state to imitate native WebKit styles.
  .form-control-focus();

  // Placeholder
  .placeholder();

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: @input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }

  // Reset height for `textarea`s
  textarea& {
    height: auto;
  }
}

#SOEmailDiv {
  padding-top: 10px !important;
  padding-bottom: 5px !important;
}